/*
 * Copyright 2020 Haiku, Inc. All rights reserved.
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 *		Niels Sascha Reedijk, niels.reedijk@gmail.com
 *
 * Corresponds to:
 *		headers/os/interface/AbstractLayoutItem.h	hrev43514
 *		src/kits/interface/AbstractLayoutItem.cpp	hrev43514
 */


// The AbstractLayoutItem.h and its BAbstractLayoutItem is considered entirely
// internal, and as such should not appear in the documentation.


//! \cond INTERNAL


/*!
	\file AbstractLayoutItem.h
	\ingroup layout
	\brief Provides the BAbstractLayoutItem class.

	\since Haiku R1
*/


/*!
	\class BAbstractLayoutItem
	\ingroup layout
	\ingroup libbe
	\brief Internal base class for various layouts.

	\since Haiku R1
*/


/*!
	\fn BAbstractLayoutItem::BAbstractLayoutItem()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn BAbstractLayoutItem::BAbstractLayoutItem(BMessage *from)
	\brief Undocumented public method

	\param from Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BAbstractLayoutItem::~BAbstractLayoutItem()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::MinSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::MaxSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::PreferredSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BAlignment BAbstractLayoutItem::Alignment()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::SetExplicitMinSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::SetExplicitMaxSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::SetExplicitPreferredSize(BSize size)
	\brief Undocumented public method

	\param size Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::SetExplicitAlignment(BAlignment alignment)
	\brief Undocumented public method

	\param alignment Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::BaseMinSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::BaseMaxSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BSize BAbstractLayoutItem::BasePreferredSize()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual BAlignment BAbstractLayoutItem::BaseAlignment()
	\brief Undocumented public method

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual status_t BAbstractLayoutItem::Archive(BMessage *into, bool deep=true) const
	\brief Undocumented public method

	\param into Undocumented
	\param deep Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual status_t BAbstractLayoutItem::Perform(perform_code d, void *arg)
	\brief Undocumented public method

	\param d Undocumented
	\param arg Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual status_t BAbstractLayoutItem::AllUnarchived(const BMessage *archive)
	\brief Undocumented protected method

	\param archive Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual status_t BAbstractLayoutItem::AllArchived(BMessage *archive) const
	\brief Undocumented protected method

	\param archive Undocumented

	\return Undocumented
	\retval <value> Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::LayoutInvalidated(bool children)
	\brief Undocumented protected method

	\param children Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::AttachedToLayout()
	\brief Undocumented protected method

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::DetachedFromLayout(BLayout *layout)
	\brief Undocumented protected method

	\param layout Undocumented

	\since Haiku R1
*/


/*!
	\fn virtual void BAbstractLayoutItem::AncestorVisibilityChanged(bool shown)
	\brief Undocumented protected method

	\param shown Undocumented

	\since Haiku R1
*/

//! \endcond INTERNAL
